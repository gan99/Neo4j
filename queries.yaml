# queries.yaml

default_graph:
  display_name: "Default View (by Degree)"
  description: "Node size is based on the number of connections (degree)."
  enabled: true
  caption_property: "name"
  mapping:
    node_size: "degree"
    node_community: "community"
    edge_weight: "weight"
  primary: >
    MATCH (n)-[r]-(m)
    RETURN n, r, m
    LIMIT toInteger($limit)
  neighbors:
    _default: >
      MATCH (n)-[r]-(m)
      WHERE elementId(n) = $node_id
      RETURN n, r, m
      LIMIT toInteger($limit)
    Party: >
      MATCH (n:Party)-[r:INTERACTS]-(m:Party)
      WHERE elementId(n) = $node_id
      RETURN n, r, m
      LIMIT toInteger($limit)
    FinancialInstitution: >
      MATCH (n:FinancialInstitution)-[r]-(m)
      WHERE elementId(n) = $node_id
      RETURN n, r, m
      LIMIT toInteger($limit)

party_interactions:
  display_name: "Party Interactions"
  description: "Visualizes payor/payee interactions between parties, sized by PageRank and grouped by community."
  enabled: true
  caption_property: "name"
  mapping:
    node_size: "pagerank"
    node_community: "community"
    edge_weight: "count"
  primary: >
    MATCH (p1:Party)-[r:INTERACTS]->(p2:Party)
    RETURN p1, r, p2
    LIMIT toInteger($limit)
  neighbors:
    _default: >
      MATCH (n)-[r]-(m)
      WHERE elementId(n) = $node_id
      RETURN n, r, m
      LIMIT toInteger($limit)
    Party: >
      MATCH (n:Party)-[r:INTERACTS]-(m:Party)
      WHERE elementId(n) = $node_id
      RETURN n, r, m
      LIMIT toInteger($limit)
    FinancialInstitution: >
      MATCH (n:FinancialInstitution)-[r]-(m)
      WHERE elementId(n) = $node_id
      RETURN n, r, m
      LIMIT toInteger($limit)

party_financial_institution:
  display_name: "Partyâ€“Financial Institution"
  description: "Shows party interactions and their associated financial institutions."
  enabled: true
  caption_property: "name"
  mapping:
    node_size: "pagerank"
    node_community: "community"
    edge_weight: "weight"
  primary: >
    MATCH (n:Party)-[r:INTERACTS]->(m:Party)
    OPTIONAL MATCH (n)-[re1:IS_CUSTOMER_OF]->(f1:FinancialInstitution)
    OPTIONAL MATCH (m)-[re2:IS_CUSTOMER_OF]->(f2:FinancialInstitution)
    RETURN n, r, m, f1, f2, re1, re2
    LIMIT toInteger($limit)
  neighbors:
    _default: >
      MATCH (n)-[r]-(m)
      WHERE elementId(n) = $node_id
      RETURN n, r, m
      LIMIT toInteger($limit)
    Party: >
      MATCH (n:Party)-[r:INTERACTS]-(m:Party)
      WHERE elementId(n) = $node_id
      RETURN n, r, m
      LIMIT toInteger($limit)
    FinancialInstitution: >
      MATCH (n:FinancialInstitution)-[r]-(m)
      WHERE elementId(n) = $node_id
      RETURN n, r, m
      LIMIT toInteger($limit)